{"map":"{\"version\":3,\"sources\":[\"/Users/piyushgarg/Coding/tutreact/routes/src/components/Card.jsx\",\"/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx\",\"/Users/piyushgarg/Coding/tutreact/routes/src/home.jsx\",\"/Users/piyushgarg/Coding/tutreact/routes/src/App.js\",\"/Users/piyushgarg/Coding/tutreact/routes/src/serviceWorker.js\",\"/Users/piyushgarg/Coding/tutreact/routes/src/index.js\"],\"names\":[\"Card\",\"_ref\",\"info\",\"string\",\"city\",\"name\",\"country\",\"sys\",\"temp\",\"Math\",\"round\",\"main\",\"description\",\"weather\",\"charAt\",\"toUpperCase\",\"slice\",\"humidity\",\"temp_min\",\"temp_max\",\"useEffect\",\"react_default\",\"a\",\"createElement\",\"className\",\"href\",\"Navbar\",\"_useState\",\"useState\",\"_useState2\",\"Object\",\"slicedToArray\",\"query\",\"setquery\",\"URL\",\"_useState3\",\"_useState4\",\"data\",\"setdata\",\"option\",\"methos\",\"headers\",\"Headers\",\"x-rapidapi-key\",\"x-rapidapi-host\",\"fetch\",\"then\",\"res\",\"json\",\"length\",\"onSubmit\",\"e\",\"preventDefault\",\"concat\",\"value\",\"type\",\"required\",\"onChange\",\"target\",\"placeholder\",\"components_Card\",\"Home\",\"components_Navbar\",\"App\",\"home\",\"Boolean\",\"window\",\"location\",\"hostname\",\"match\",\"ReactDOM\",\"render\",\"src_App\",\"document\",\"getElementById\",\"navigator\",\"serviceWorker\",\"ready\",\"registration\",\"unregister\"],\"mappings\":\"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\",\"sourcesContent\":[\"import React from \\\"react\\\";\\nimport { useEffect } from \\\"react\\\";\\nimport \\\"./cardcss.css\\\";\\n\\nconst Card = ({ info }) => {\\n  //(32°F − 32) × 5/9 = 0°C\\n  function capitalizeFirstLetter(string) {\\n    return string.charAt(0).toUpperCase() + string.slice(1);\\n  }\\n\\n  const city = info.name;\\n  const country = info.sys.country;\\n  const temp = Math.round(info.main.temp - 273);\\n  const description = capitalizeFirstLetter(info.weather[0].description);\\n  const humidity = info.main.humidity;\\n \\n  const temp_min = Math.round(info.main.temp_min - 273);\\n  const temp_max = Math.round(info.main.temp_max - 273);\\n\\n  useEffect(() => {\\n    \\n  });\\n\\n  return (\\n    <div className=\\\"container\\\">\\n      <div className=\\\"row\\\">\\n        <div className=\\\"col\\\">\\n          <div className=\\\"weather-card one\\\">\\n            <div className=\\\"top\\\">\\n              <div className=\\\"wrapper\\\">\\n                <div className=\\\"mynav\\\">\\n                  <a>\\n                    <span className=\\\"lnr lnr-chevron-left\\\" />\\n                  </a>\\n                  <a href=\\\"\\\">\\n                    <span className=\\\"lnr lnr-cog\\\" />\\n                  </a>\\n                </div>\\n                <h1 className=\\\"heading\\\">{description}</h1>\\n                <h3 className=\\\"location\\\">\\n                  {city},{country}\\n                </h3>\\n                <p className=\\\"temp\\\">\\n                  <span className=\\\"temp-value\\\">{temp}</span>\\n                  <span className=\\\"deg\\\">0</span>\\n                  <a href=\\\"\\\">\\n                    <span className=\\\"temp-type\\\">C</span>\\n                  </a>\\n                </p>\\n                <h3 className=\\\"location\\\">\\n                  Minimum : {temp_min} and Maximum : {temp_max}{\\\" \\\"}\\n                </h3>\\n                <h3 className=\\\"location\\\">Humidity : {humidity}</h3>\\n                <h4 className=\\\"location\\\">Developed By <a className=\\\" btn btn-info\\\" href=\\\"https://github.com/piyushgarg195\\\">Piyush Garg</a></h4>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n     \\n    </div>\\n  );\\n};\\n\\nexport default Card;\\n\",\"import React from \\\"react\\\";\\nimport { useEffect, useState } from \\\"react\\\";\\nimport Card from \\\"./Card\\\";\\nconst Navbar = () => {\\n  const [query, setquery] = useState();\\n  let URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=patiala`;\\n  const handelchange = e => {\\n    setquery(e.target.value);\\n  };\\n  const handelclick = e => {\\n    e.preventDefault();\\n    URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=${query}`;\\n    fetch(URL, option)\\n      .then(res => res.json())\\n      .then(data => {\\n        setdata(data);\\n      });\\n  };\\n\\n  const [data, setdata] = useState([]);\\n\\n  const option = {\\n    methos: \\\"GET\\\",\\n    headers: new Headers({\\n      \\\"x-rapidapi-key\\\": \\\"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\\\",\\n      \\\"x-rapidapi-host\\\": \\\"community-open-weather-map.p.rapidapi.com\\\"\\n    })\\n  };\\n  useEffect(() => {\\n   \\n    fetch(URL, option)\\n      .then(res => res.json())\\n      .then(data => {\\n        setdata(data);\\n      });\\n  }, [URL]);\\n  if (data.length != 0) {\\n    return (\\n      <div>\\n        <nav className=\\\"navbar navbar-expand-sm bg-dark navbar-dark\\\">\\n          <form onSubmit={handelclick} className=\\\"form-inline\\\">\\n            <div className=\\\"input-group\\\">\\n              <div className=\\\"input-group-prepend\\\">\\n                <span className=\\\"input-group-text\\\">@</span>\\n              </div>\\n              <input\\n                value={query}\\n                type=\\\"text\\\"\\n                required\\n                onChange={handelchange}\\n                className=\\\"form-control\\\"\\n                placeholder=\\\"City\\\"\\n              />\\n              <input\\n                type=\\\"submit\\\"\\n                className=\\\"btn btn-success ml-1\\\"\\n                value=\\\"Search\\\"\\n              />\\n            </div>\\n          </form>\\n        </nav>\\n\\n        <Card info={data} />\\n      </div>\\n    );\\n  } else {\\n    return <div />;\\n  }\\n};\\n\\nexport default Navbar;\\n\",\"import React from 'react';\\nimport Navbar from './components/Navbar'\\n\\n\\nconst Home = () => {\\n    return(\\n        <div>\\n        <Navbar/>\\n       \\n        </div>\\n    )\\n}\\n\\nexport default Home;\",\"import React from \\\"react\\\";\\n\\nimport Home from './home';\\nimport \\\"./App.css\\\";\\n\\n\\n\\nfunction App() {\\n  return (\\n    <div className=\\\"App\\\">\\n     <Home/>\\n    </div>\\n  );\\n}\\n\\nexport default App;\\n\",\"// This optional code is used to register a service worker.\\n// register() is not called by default.\\n\\n// This lets the app load faster on subsequent visits in production, and gives\\n// it offline capabilities. However, it also means that developers (and users)\\n// will only see deployed updates on subsequent visits to a page, after all the\\n// existing tabs open on the page have been closed, since previously cached\\n// resources are updated in the background.\\n\\n// To learn more about the benefits of this model and instructions on how to\\n// opt-in, read https://bit.ly/CRA-PWA\\n\\nconst isLocalhost = Boolean(\\n  window.location.hostname === 'localhost' ||\\n    // [::1] is the IPv6 localhost address.\\n    window.location.hostname === '[::1]' ||\\n    // 127.0.0.1/8 is considered localhost for IPv4.\\n    window.location.hostname.match(\\n      /^127(?:\\\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\\n    )\\n);\\n\\nexport function register(config) {\\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\\n    // The URL constructor is available in all browsers that support SW.\\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\\n    if (publicUrl.origin !== window.location.origin) {\\n      // Our service worker won't work if PUBLIC_URL is on a different origin\\n      // from what our page is served on. This might happen if a CDN is used to\\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\\n      return;\\n    }\\n\\n    window.addEventListener('load', () => {\\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\\n\\n      if (isLocalhost) {\\n        // This is running on localhost. Let's check if a service worker still exists or not.\\n        checkValidServiceWorker(swUrl, config);\\n\\n        // Add some additional logging to localhost, pointing developers to the\\n        // service worker/PWA documentation.\\n        navigator.serviceWorker.ready.then(() => {\\n          console.log(\\n            'This web app is being served cache-first by a service ' +\\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\\n          );\\n        });\\n      } else {\\n        // Is not localhost. Just register service worker\\n        registerValidSW(swUrl, config);\\n      }\\n    });\\n  }\\n}\\n\\nfunction registerValidSW(swUrl, config) {\\n  navigator.serviceWorker\\n    .register(swUrl)\\n    .then(registration => {\\n      registration.onupdatefound = () => {\\n        const installingWorker = registration.installing;\\n        if (installingWorker == null) {\\n          return;\\n        }\\n        installingWorker.onstatechange = () => {\\n          if (installingWorker.state === 'installed') {\\n            if (navigator.serviceWorker.controller) {\\n              // At this point, the updated precached content has been fetched,\\n              // but the previous service worker will still serve the older\\n              // content until all client tabs are closed.\\n              console.log(\\n                'New content is available and will be used when all ' +\\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\\n              );\\n\\n              // Execute callback\\n              if (config && config.onUpdate) {\\n                config.onUpdate(registration);\\n              }\\n            } else {\\n              // At this point, everything has been precached.\\n              // It's the perfect time to display a\\n              // \\\"Content is cached for offline use.\\\" message.\\n              console.log('Content is cached for offline use.');\\n\\n              // Execute callback\\n              if (config && config.onSuccess) {\\n                config.onSuccess(registration);\\n              }\\n            }\\n          }\\n        };\\n      };\\n    })\\n    .catch(error => {\\n      console.error('Error during service worker registration:', error);\\n    });\\n}\\n\\nfunction checkValidServiceWorker(swUrl, config) {\\n  // Check if the service worker can be found. If it can't reload the page.\\n  fetch(swUrl)\\n    .then(response => {\\n      // Ensure service worker exists, and that we really are getting a JS file.\\n      const contentType = response.headers.get('content-type');\\n      if (\\n        response.status === 404 ||\\n        (contentType != null && contentType.indexOf('javascript') === -1)\\n      ) {\\n        // No service worker found. Probably a different app. Reload the page.\\n        navigator.serviceWorker.ready.then(registration => {\\n          registration.unregister().then(() => {\\n            window.location.reload();\\n          });\\n        });\\n      } else {\\n        // Service worker found. Proceed as normal.\\n        registerValidSW(swUrl, config);\\n      }\\n    })\\n    .catch(() => {\\n      console.log(\\n        'No internet connection found. App is running in offline mode.'\\n      );\\n    });\\n}\\n\\nexport function unregister() {\\n  if ('serviceWorker' in navigator) {\\n    navigator.serviceWorker.ready.then(registration => {\\n      registration.unregister();\\n    });\\n  }\\n}\\n\",\"import React from 'react';\\nimport ReactDOM from 'react-dom';\\nimport './index.css';\\nimport App from './App';\\nimport * as serviceWorker from './serviceWorker';\\n\\nReactDOM.render(<App />, document.getElementById('root'));\\n\\nserviceWorker.unregister();\\n\"]}","code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,function(e,a,t){e.exports=t(13)},,,,,,function(e,a,t){},function(e,a,t){},function(e,a,t){},function(e,a,t){\"use strict\";t.r(a);var n=t(0),c=t.n(n),r=t(3),m=t.n(r),l=(t(10),t(1)),s=(t(11),function(e){var a=e.info;var t,r=a.name,m=a.sys.country,l=Math.round(a.main.temp-273),s=(t=a.weather[0].description).charAt(0).toUpperCase()+t.slice(1),i=a.main.humidity,o=Math.round(a.main.temp_min-273),u=Math.round(a.main.temp_max-273);return Object(n.useEffect)(function(){}),c.a.createElement(\"div\",{className:\"container\"},c.a.createElement(\"div\",{className:\"row\"},c.a.createElement(\"div\",{className:\"col\"},c.a.createElement(\"div\",{className:\"weather-card one\"},c.a.createElement(\"div\",{className:\"top\"},c.a.createElement(\"div\",{className:\"wrapper\"},c.a.createElement(\"div\",{className:\"mynav\"},c.a.createElement(\"a\",null,c.a.createElement(\"span\",{className:\"lnr lnr-chevron-left\"})),c.a.createElement(\"a\",{href:\"\"},c.a.createElement(\"span\",{className:\"lnr lnr-cog\"}))),c.a.createElement(\"h1\",{className:\"heading\"},s),c.a.createElement(\"h3\",{className:\"location\"},r,\",\",m),c.a.createElement(\"p\",{className:\"temp\"},c.a.createElement(\"span\",{className:\"temp-value\"},l),c.a.createElement(\"span\",{className:\"deg\"},\"0\"),c.a.createElement(\"a\",{href:\"\"},c.a.createElement(\"span\",{className:\"temp-type\"},\"C\"))),c.a.createElement(\"h3\",{className:\"location\"},\"Minimum : \",o,\" and Maximum : \",u,\" \"),c.a.createElement(\"h3\",{className:\"location\"},\"Humidity : \",i),c.a.createElement(\"h4\",{className:\"location\"},\"Developed By \",c.a.createElement(\"a\",{className:\" btn btn-info\",href:\"https://github.com/piyushgarg195\"},\"Piyush Garg\"))))))))}),i=function(){var e=Object(n.useState)(),a=Object(l.a)(e,2),t=a[0],r=a[1],m=\"https://community-open-weather-map.p.rapidapi.com/weather?q=patiala\",i=Object(n.useState)([]),o=Object(l.a)(i,2),u=o[0],p=o[1],h={methos:\"GET\",headers:new Headers({\"x-rapidapi-key\":\"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\"x-rapidapi-host\":\"community-open-weather-map.p.rapidapi.com\"})};return Object(n.useEffect)(function(){fetch(m,h).then(function(e){return e.json()}).then(function(e){p(e)})},[m]),0!=u.length?c.a.createElement(\"div\",null,c.a.createElement(\"nav\",{className:\"navbar navbar-expand-sm bg-dark navbar-dark\"},c.a.createElement(\"form\",{onSubmit:function(e){e.preventDefault(),m=\"https://community-open-weather-map.p.rapidapi.com/weather?q=\".concat(t),fetch(m,h).then(function(e){return e.json()}).then(function(e){p(e)})},className:\"form-inline\"},c.a.createElement(\"div\",{className:\"input-group\"},c.a.createElement(\"div\",{className:\"input-group-prepend\"},c.a.createElement(\"span\",{className:\"input-group-text\"},\"@\")),c.a.createElement(\"input\",{value:t,type:\"text\",required:!0,onChange:function(e){r(e.target.value)},className:\"form-control\",placeholder:\"City\"}),c.a.createElement(\"input\",{type:\"submit\",className:\"btn btn-success ml-1\",value:\"Search\"})))),c.a.createElement(s,{info:u})):c.a.createElement(\"div\",null)},o=function(){return c.a.createElement(\"div\",null,c.a.createElement(i,null))};t(12);var u=function(){return c.a.createElement(\"div\",{className:\"App\"},c.a.createElement(o,null))};Boolean(\"localhost\"===window.location.hostname||\"[::1]\"===window.location.hostname||window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/));m.a.render(c.a.createElement(u,null),document.getElementById(\"root\")),\"serviceWorker\"in navigator&&navigator.serviceWorker.ready.then(function(e){e.unregister()})}],[[4,1,2]]]);","extractedComments":[]}