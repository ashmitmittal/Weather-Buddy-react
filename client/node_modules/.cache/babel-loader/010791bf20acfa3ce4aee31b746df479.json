{"ast":null,"code":"import _slicedToArray from \"/Users/piyushgarg/Coding/tutreact/routes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nconst Navbar = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        query = _useState2[0],\n        setquery = _useState2[1];\n\n  let URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=patiala\";\n\n  const handelchange = e => {\n    setquery(e.target.value);\n  };\n\n  const handelclick = e => {\n    e.preventDefault();\n    URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=\".concat(query);\n    fetch(URL, option).then(res => res.json()).then(data => {\n      setdata(data);\n    });\n  };\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        data = _useState4[0],\n        setdata = _useState4[1];\n\n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    console.log('URL:', query);\n    fetch(URL, option).then(res => res.json()).then(data => {\n      setdata(data);\n    });\n  }, [URL]);\n\n  if (data.length != 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-sm bg-dark navbar-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handelclick,\n      className: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"@\")), React.createElement(\"input\", {\n      value: query,\n      type: \"text\",\n      required: true,\n      onChange: handelchange,\n      className: \"form-control\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-success ml-1\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    })))), React.createElement(Card, {\n      info: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx"],"names":["React","useEffect","useState","Card","Navbar","query","setquery","URL","handelchange","e","target","value","handelclick","preventDefault","fetch","option","then","res","json","data","setdata","methos","headers","Headers","console","log","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBACOF,QAAQ,EADf;AAAA;AAAA,QACZG,KADY;AAAA,QACLC,QADK;;AAEnB,MAAIC,GAAG,wEAAP;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBH,IAAAA,QAAQ,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACI,cAAF;AACAN,IAAAA,GAAG,yEAAkEF,KAAlE,CAAH;AACAS,IAAAA,KAAK,CAACP,GAAD,EAAMQ,MAAN,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJH;AAKD,GARD;;AANmB,qBAgBKjB,QAAQ,CAAC,EAAD,CAhBb;AAAA;AAAA,QAgBZiB,IAhBY;AAAA,QAgBNC,OAhBM;;AAkBnB,QAAML,MAAM,GAAG;AACbM,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAkB,oDADC;AAEnB,yBAAmB;AAFA,KAAZ;AAFI,GAAf;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AACduB,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBpB,KAAnB;AACAS,IAAAA,KAAK,CAACP,GAAD,EAAMQ,MAAN,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQG,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJH;AAKD,GAPQ,EAON,CAACZ,GAAD,CAPM,CAAT;;AAQA,MAAIY,IAAI,CAACO,MAAL,IAAe,CAAnB,EAAsB;AACpB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,QAAQ,EAAEd,WAAhB;AAA6B,MAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,EAIE;AACE,MAAA,KAAK,EAAEP,KADT;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,MAHV;AAIE,MAAA,QAAQ,EAAEG,YAJZ;AAKE,MAAA,SAAS,EAAC,cALZ;AAME,MAAA,WAAW,EAAC,MANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAYE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAZF,CADF,CADF,CADF,EAwBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEW,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAxBF,CADF;AA4BD,GA7BD,MA6BO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAjED;;AAmEA,eAAef,MAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nconst Navbar = () => {\n  const [query, setquery] = useState();\n  let URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=patiala`;\n  const handelchange = e => {\n    setquery(e.target.value);\n  };\n  const handelclick = e => {\n    e.preventDefault();\n    URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=${query}`;\n    fetch(URL, option)\n      .then(res => res.json())\n      .then(data => {\n        setdata(data);\n      });\n  };\n\n  const [data, setdata] = useState([]);\n\n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    console.log('URL:',query);\n    fetch(URL, option)\n      .then(res => res.json())\n      .then(data => {\n        setdata(data);\n      });\n  }, [URL]);\n  if (data.length != 0) {\n    return (\n      <div>\n        <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n          <form onSubmit={handelclick} className=\"form-inline\">\n            <div className=\"input-group\">\n              <div className=\"input-group-prepend\">\n                <span className=\"input-group-text\">@</span>\n              </div>\n              <input\n                value={query}\n                type=\"text\"\n                required\n                onChange={handelchange}\n                className=\"form-control\"\n                placeholder=\"City\"\n              />\n              <input\n                type=\"submit\"\n                className=\"btn btn-success ml-1\"\n                value=\"Search\"\n              />\n            </div>\n          </form>\n        </nav>\n\n        <Card info={data} />\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}