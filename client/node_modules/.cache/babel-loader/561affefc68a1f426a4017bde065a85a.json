{"ast":null,"code":"import _slicedToArray from \"/Users/piyushgarg/Coding/tutreact/routes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nconst Navbar = ({\n  mycity\n}) => {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setdata = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        city = _useState4[0],\n        setcity = _useState4[1];\n\n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    let URL = \"\";\n\n    if (mycity !== undefined) {\n      URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=\".concat(mycity);\n    } else {\n      URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=patiala\";\n    }\n\n    fetch(URL, option).then(res => res.json()).then(data => {\n      setdata(data);\n    });\n  }, []);\n\n  if (data.length != 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Card, {\n      info: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx"],"names":["React","useEffect","useState","Card","Navbar","mycity","data","setdata","city","setcity","option","methos","headers","Headers","URL","undefined","fetch","then","res","json","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAAA,oBACLH,QAAQ,CAAC,EAAD,CADH;AAAA;AAAA,QACtBI,IADsB;AAAA,QAChBC,OADgB;;AAAA,qBAELL,QAAQ,EAFH;AAAA;AAAA,QAEtBM,IAFsB;AAAA,QAEhBC,OAFgB;;AAG7B,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAkB,oDADC;AAEnB,yBAAmB;AAFA,KAAZ;AAFI,GAAf;AAOAZ,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIa,GAAG,GAAG,EAAV;;AACA,QAAIT,MAAM,KAAKU,SAAf,EAA0B;AACxBD,MAAAA,GAAG,yEAAkET,MAAlE,CAAH;AACD,KAFD,MAEO;AACLS,MAAAA,GAAG,wEAAH;AACD;;AACDE,IAAAA,KAAK,CAACF,GAAD,EAAMJ,MAAN,CAAL,CACGO,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQX,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJH;AAKD,GAZQ,EAYN,EAZM,CAAT;;AAaA,MAAIA,IAAI,CAACc,MAAL,IAAe,CAAnB,EAAsB;AACpB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEd,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AAKD,GAND,MAMO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAhCD;;AAkCA,eAAeF,MAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nconst Navbar = ({ mycity }) => {\n  const [data, setdata] = useState([]);\n  const [city, setcity] = useState();\n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    let URL = \"\";\n    if (mycity !== undefined) {\n      URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=${mycity}`;\n    } else {\n      URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=patiala`;\n    }\n    fetch(URL, option)\n      .then(res => res.json())\n      .then(data => {\n        setdata(data);\n      });\n  }, []);\n  if (data.length != 0) {\n    return (\n      <div>\n        <Card info={data} />\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}