{"ast":null,"code":"import _slicedToArray from \"/Users/piyushgarg/Coding/tutreact/routes/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx\";\nimport React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\n\nconst Navbar = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        query = _useState2[0],\n        setquery = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        city = _useState4[0],\n        setcity = _useState4[1];\n\n  URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=patiala\";\n\n  const handelchange = e => {\n    setquery(e.target.value);\n  };\n\n  const handelclick = e => {\n    e.preventDefault();\n    setcity(query);\n    console.log(city);\n  };\n\n  const _useState5 = useState([]),\n        _useState6 = _slicedToArray(_useState5, 2),\n        data = _useState6[0],\n        setdata = _useState6[1];\n\n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    if (city !== undefined) {\n      URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=\".concat(query);\n    } else {\n      URL = \"https://community-open-weather-map.p.rapidapi.com/weather?q=patiala\";\n    }\n\n    fetch(URL, option).then(res => res.json()).then(data => {\n      setdata(data);\n    });\n  }, []);\n\n  if (data.length != 0) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      className: \"navbar navbar-expand-sm bg-dark navbar-dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      onSubmit: handelclick,\n      className: \"form-inline\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: \"input-group-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"@\")), React.createElement(\"input\", {\n      value: query,\n      type: \"text\",\n      onChange: handelchange,\n      className: \"form-control\",\n      placeholder: \"City\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      type: \"submit\",\n      className: \"btn btn-success ml-1\",\n      value: \"Search\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    })))), React.createElement(Card, {\n      info: data,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }));\n  } else {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69\n      },\n      __self: this\n    });\n  }\n};\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/piyushgarg/Coding/tutreact/routes/src/components/Navbar.jsx"],"names":["React","useEffect","useState","Card","Navbar","query","setquery","city","setcity","URL","handelchange","e","target","value","handelclick","preventDefault","console","log","data","setdata","option","methos","headers","Headers","undefined","fetch","then","res","json","length"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,IAAP,MAAiB,QAAjB;;AACA,MAAMC,MAAM,GAAG,MAAM;AAAA,oBAEOF,QAAQ,EAFf;AAAA;AAAA,QAEZG,KAFY;AAAA,QAELC,QAFK;;AAAA,qBAGKJ,QAAQ,EAHb;AAAA;AAAA,QAGZK,IAHY;AAAA,QAGNC,OAHM;;AAInBC,EAAAA,GAAG,wEAAH;;AACA,QAAMC,YAAY,GAAGC,CAAC,IAAI;AACxBL,IAAAA,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD,GAFD;;AAGA,QAAMC,WAAW,GAAGH,CAAC,IAAI;AACvBA,IAAAA,CAAC,CAACI,cAAF;AACAP,IAAAA,OAAO,CAACH,KAAD,CAAP;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYV,IAAZ;AACD,GAJD;;AARmB,qBAcKL,QAAQ,CAAC,EAAD,CAdb;AAAA;AAAA,QAcZgB,IAdY;AAAA,QAcNC,OAdM;;AAgBnB,QAAMC,MAAM,GAAG;AACbC,IAAAA,MAAM,EAAE,KADK;AAEbC,IAAAA,OAAO,EAAE,IAAIC,OAAJ,CAAY;AACnB,wBAAkB,oDADC;AAEnB,yBAAmB;AAFA,KAAZ;AAFI,GAAf;AAOAtB,EAAAA,SAAS,CAAC,MAAM;AAEd,QAAIM,IAAI,KAAKiB,SAAb,EAAwB;AACtBf,MAAAA,GAAG,yEAAkEJ,KAAlE,CAAH;AACD,KAFD,MAEO;AACLI,MAAAA,GAAG,wEAAH;AACD;;AACDgB,IAAAA,KAAK,CAAChB,GAAD,EAAMW,MAAN,CAAL,CACGM,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAEQR,IAAI,IAAI;AACZC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACD,KAJH;AAKD,GAZQ,EAYN,EAZM,CAAT;;AAaA,MAAIA,IAAI,CAACW,MAAL,IAAe,CAAnB,EAAsB;AACpB,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,6CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACF;AAAM,MAAA,QAAQ,EAAEf,WAAhB;AAA6B,MAAA,SAAS,EAAC,aAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAC,kBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADF,EAIE;AACE,MAAA,KAAK,EAAET,KADT;AAEE,MAAA,IAAI,EAAC,MAFP;AAGE,MAAA,QAAQ,EAAEK,YAHZ;AAIE,MAAA,SAAS,EAAC,cAJZ;AAKE,MAAA,WAAW,EAAC,MALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJF,EAWE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,SAAS,EAAC,sBAFZ;AAGE,MAAA,KAAK,EAAC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXF,CADF,CADE,CADJ,EAuBE,oBAAC,IAAD;AAAM,MAAA,IAAI,EAAEQ,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAvBF,CADF;AA2BD,GA5BD,MA4BO;AACL,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;AACF,CAnED;;AAqEA,eAAed,MAAf","sourcesContent":["import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"./Card\";\nconst Navbar = () => {\n\n  const [query, setquery] = useState();\n  const [city, setcity] = useState();\n  URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=patiala`\n  const handelchange = e => {\n    setquery(e.target.value);\n  };\n  const handelclick = e => {\n    e.preventDefault();\n    setcity(query);\n    console.log(city);\n  };\n\n  const [data, setdata] = useState([]);\n  \n  const option = {\n    methos: \"GET\",\n    headers: new Headers({\n      \"x-rapidapi-key\": \"55816bf15emshbef5892f101cc0cp1f2484jsnd49b93aef792\",\n      \"x-rapidapi-host\": \"community-open-weather-map.p.rapidapi.com\"\n    })\n  };\n  useEffect(() => {\n    \n    if (city !== undefined) {\n      URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=${query}`;\n    } else {\n      URL = `https://community-open-weather-map.p.rapidapi.com/weather?q=patiala`;\n    }\n    fetch(URL, option)\n      .then(res => res.json())\n      .then(data => {\n        setdata(data);\n      });\n  }, []);\n  if (data.length != 0) {\n    return (\n      <div>\n          <nav className=\"navbar navbar-expand-sm bg-dark navbar-dark\">\n        <form onSubmit={handelclick} className=\"form-inline\">\n          <div className=\"input-group\">\n            <div className=\"input-group-prepend\">\n              <span className=\"input-group-text\">@</span>\n            </div>\n            <input\n              value={query}\n              type=\"text\"\n              onChange={handelchange}\n              className=\"form-control\"\n              placeholder=\"City\"\n            />\n            <input\n              type=\"submit\"\n              className=\"btn btn-success ml-1\"\n              value=\"Search\"\n            />\n          </div>\n        </form>\n      </nav>\n\n        <Card info={data} />\n      </div>\n    );\n  } else {\n    return <div />;\n  }\n};\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}